{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar Buffer = require('safe-buffer').Buffer;\nvar contentDisposition = require('content-disposition');\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses');\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype);\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res;\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function (links) {\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function (rel) {\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk];\n  }\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn');\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function';\n\n  // populate Content-Length\n  var len;\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length;\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding);\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding);\n      encoding = undefined;\n      len = chunk.length;\n    }\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if (etag = etagFn(chunk, encoding)) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape);\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape);\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    // replace chars not allowed in JavaScript that are in JSON\n    body = body.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode);\n  this.statusCode = statusCode;\n  this.type('txt');\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile');\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\nres.sendfile = deprecate.function(res.sendfile, 'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download(path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null;\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null;\n  } else if (typeof options === 'function') {\n    done = options;\n    opts = null;\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key];\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts);\n  opts.headers = headers;\n\n  // Resolve the full path for sendFile\n  var fullPath = resolve(path);\n\n  // send file\n  return this.sendFile(fullPath, opts, done);\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType = res.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1 ? mime.lookup(type) : type;\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function (obj) {\n  var req = this.req;\n  var next = req.next;\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n  var key = keys.length > 0 ? req.accepts(keys) : false;\n  this.vary(\"Accept\");\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function (o) {\n      return o.value;\n    });\n    next(err);\n  }\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n  this.set('Content-Disposition', contentDisposition(filename));\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val) : Array.isArray(val) ? [prev].concat(val) : [prev, val];\n  }\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set = res.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val) ? val.map(String) : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function (field) {\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({\n    expires: new Date(1),\n    path: '/'\n  }, options);\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n  var val = typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value);\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function () {\n      body = statuses[status] + '. Redirecting to ' + address;\n    },\n    html: function () {\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>';\n    },\n    default: function () {\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function (field) {\n  // checks for back-compat\n  if (!field || Array.isArray(field) && !field.length) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n  vary(this, field);\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify(value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces ? JSON.stringify(value, replacer, spaces) : JSON.stringify(value);\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c';\n        case 0x3e:\n          return '\\\\u003e';\n        case 0x26:\n          return '\\\\u0026';\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c;\n      }\n    });\n  }\n  return json;\n}","map":{"version":3,"names":["Buffer","require","contentDisposition","deprecate","encodeUrl","escapeHtml","http","isAbsolute","onFinished","path","statuses","merge","sign","normalizeType","normalizeTypes","setCharset","cookie","send","extname","mime","resolve","vary","res","Object","create","ServerResponse","prototype","module","exports","charsetRegExp","status","code","statusCode","links","link","get","set","keys","map","rel","join","body","chunk","encoding","req","type","app","arguments","length","isBuffer","json","etagFn","generateETag","len","undefined","byteLength","from","etag","fresh","removeHeader","method","end","obj","val","escape","replacer","spaces","stringify","jsonp","callback","query","Array","isArray","replace","sendStatus","String","sendFile","options","done","next","opts","TypeError","root","pathname","encodeURI","file","sendfile","err","syscall","function","download","filename","name","headers","i","key","toLowerCase","fullPath","contentType","ct","indexOf","lookup","format","fn","default","accepts","value","Error","types","o","attachment","append","field","prev","concat","header","test","charset","charsets","split","setHeader","getHeader","clearCookie","expires","Date","secret","signed","JSON","now","maxAge","serialize","location","url","loc","redirect","address","text","html","u","render","view","self","_locals","locals","str","streaming","onaborted","ondirectory","onerror","onend","onfile","onfinish","setImmediate","onstream","on","k","pipe","c","charCodeAt"],"sources":["C:/Users/Moran/Documents/react-projects/react-demo/node_modules/express/lib/response.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    // replace chars not allowed in JavaScript that are in JSON\n    body = body\n      .replace(/\\u2028/g, '\\\\u2028')\n      .replace(/\\u2029/g, '\\\\u2029');\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = resolve(path);\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function(o){ return o.value });\n    next(err);\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n      : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}