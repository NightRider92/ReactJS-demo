{"ast":null,"code":"/* eslint-disable node/no-deprecated-api */\n\nvar toString = Object.prototype.toString;\nvar isModern = typeof Buffer !== 'undefined' && typeof Buffer.alloc === 'function' && typeof Buffer.allocUnsafe === 'function' && typeof Buffer.from === 'function';\nfunction isArrayBuffer(input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer';\n}\nfunction fromArrayBuffer(obj, byteOffset, length) {\n  byteOffset >>>= 0;\n  var maxLength = obj.byteLength - byteOffset;\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\");\n  }\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    length >>>= 0;\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\");\n    }\n  }\n  return isModern ? Buffer.from(obj.slice(byteOffset, byteOffset + length)) : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)));\n}\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n  return isModern ? Buffer.from(string, encoding) : new Buffer(string, encoding);\n}\nfunction bufferFrom(value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  return isModern ? Buffer.from(value) : new Buffer(value);\n}\nmodule.exports = bufferFrom;","map":{"version":3,"names":["toString","Object","prototype","isModern","Buffer","alloc","allocUnsafe","from","isArrayBuffer","input","call","slice","fromArrayBuffer","obj","byteOffset","length","maxLength","byteLength","RangeError","undefined","Uint8Array","fromString","string","encoding","isEncoding","TypeError","bufferFrom","value","encodingOrOffset","module","exports"],"sources":["C:/Users/Moran/Documents/react-projects/react-demo/node_modules/buffer-from/index.js"],"sourcesContent":["/* eslint-disable node/no-deprecated-api */\n\nvar toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer !== 'undefined' &&\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,SAAS,CAACF,QAAQ;AAExC,IAAIG,QAAQ,GACV,OAAOC,MAAM,KAAK,WAAW,IAC7B,OAAOA,MAAM,CAACC,KAAK,KAAK,UAAU,IAClC,OAAOD,MAAM,CAACE,WAAW,KAAK,UAAU,IACxC,OAAOF,MAAM,CAACG,IAAI,KAAK,UACxB;AAED,SAASC,aAAaA,CAAEC,KAAK,EAAE;EAC7B,OAAOT,QAAQ,CAACU,IAAI,CAACD,KAAK,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,aAAa;AAC5D;AAEA,SAASC,eAAeA,CAAEC,GAAG,EAAEC,UAAU,EAAEC,MAAM,EAAE;EACjDD,UAAU,MAAM,CAAC;EAEjB,IAAIE,SAAS,GAAGH,GAAG,CAACI,UAAU,GAAGH,UAAU;EAE3C,IAAIE,SAAS,GAAG,CAAC,EAAE;IACjB,MAAM,IAAIE,UAAU,CAAC,2BAA2B,CAAC;EACnD;EAEA,IAAIH,MAAM,KAAKI,SAAS,EAAE;IACxBJ,MAAM,GAAGC,SAAS;EACpB,CAAC,MAAM;IACLD,MAAM,MAAM,CAAC;IAEb,IAAIA,MAAM,GAAGC,SAAS,EAAE;MACtB,MAAM,IAAIE,UAAU,CAAC,2BAA2B,CAAC;IACnD;EACF;EAEA,OAAOf,QAAQ,GACXC,MAAM,CAACG,IAAI,CAACM,GAAG,CAACF,KAAK,CAACG,UAAU,EAAEA,UAAU,GAAGC,MAAM,CAAC,CAAC,GACvD,IAAIX,MAAM,CAAC,IAAIgB,UAAU,CAACP,GAAG,CAACF,KAAK,CAACG,UAAU,EAAEA,UAAU,GAAGC,MAAM,CAAC,CAAC,CAAC;AAC5E;AAEA,SAASM,UAAUA,CAAEC,MAAM,EAAEC,QAAQ,EAAE;EACrC,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,EAAE,EAAE;IACnDA,QAAQ,GAAG,MAAM;EACnB;EAEA,IAAI,CAACnB,MAAM,CAACoB,UAAU,CAACD,QAAQ,CAAC,EAAE;IAChC,MAAM,IAAIE,SAAS,CAAC,4CAA4C,CAAC;EACnE;EAEA,OAAOtB,QAAQ,GACXC,MAAM,CAACG,IAAI,CAACe,MAAM,EAAEC,QAAQ,CAAC,GAC7B,IAAInB,MAAM,CAACkB,MAAM,EAAEC,QAAQ,CAAC;AAClC;AAEA,SAASG,UAAUA,CAAEC,KAAK,EAAEC,gBAAgB,EAAEb,MAAM,EAAE;EACpD,IAAI,OAAOY,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIF,SAAS,CAAC,uCAAuC,CAAC;EAC9D;EAEA,IAAIjB,aAAa,CAACmB,KAAK,CAAC,EAAE;IACxB,OAAOf,eAAe,CAACe,KAAK,EAAEC,gBAAgB,EAAEb,MAAM,CAAC;EACzD;EAEA,IAAI,OAAOY,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAON,UAAU,CAACM,KAAK,EAAEC,gBAAgB,CAAC;EAC5C;EAEA,OAAOzB,QAAQ,GACXC,MAAM,CAACG,IAAI,CAACoB,KAAK,CAAC,GAClB,IAAIvB,MAAM,CAACuB,KAAK,CAAC;AACvB;AAEAE,MAAM,CAACC,OAAO,GAAGJ,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}