{"ast":null,"code":"var Writable = require('readable-stream/writable');\nvar Readable = require('readable-stream/readable');\nvar peek = require('level-peek');\nvar util = require('util');\nvar once = require('once');\nvar EMPTY = new Buffer(0);\nvar ENCODER = {\n  encode: function (data) {\n    return typeof data === 'string' ? data = new Buffer(data) : data;\n  },\n  decode: function (data) {\n    return Buffer.isBuffer(data) ? data : new Buffer(data);\n  },\n  buffer: true,\n  type: 'raw'\n};\nvar noop = function () {};\nvar pad = function (n) {\n  n = n.toString(16);\n  return '00000000'.slice(0, -n.length) + n;\n};\nvar expand = function (buf, len) {\n  var tmp = new Buffer(len);\n  buf.copy(tmp);\n  return tmp;\n};\nmodule.exports = function (db, opts) {\n  if (!opts) opts = {};\n  var blobs = {};\n  var blockSize = opts.blockSize || 65536;\n  var maxBatch = opts.batch || 100;\n  var blank = new Buffer(blockSize);\n  db.put('\\x00', 'ignore', noop); // memdown#12 workaround\n\n  var reservations = {};\n  var mutateBlock = function (key, offset, block, append, cb) {\n    var release = function () {\n      if (! --reservations[key].locks) delete reservations[key];\n    };\n    var onreservation = function (r) {\n      r.locks++;\n      if (!r.block && !offset) {\n        r.block = block;\n        cb(null, r.block, release);\n        return;\n      }\n      if (!r.block) r.block = new Buffer(blockSize);\n      if (r.block.length < offset + block.length) r.block = expand(r.block, offset + block.length);\n      block.copy(r.block, offset);\n      if (!append && offset + block.length < r.block.length) r.block = r.block.slice(0, offset + block.length);\n      cb(null, r.block, release);\n    };\n    if (reservations[key]) return onreservation(reservations[key]);\n    db.get(key, {\n      valueEncoding: ENCODER\n    }, function (err, block) {\n      if (err && !err.notFound) return cb(err);\n      if (!reservations[key]) reservations[key] = {\n        locks: 0,\n        block: block\n      };\n      onreservation(reservations[key]);\n    });\n  };\n  var WriteStream = function (name, opts) {\n    if (!(this instanceof WriteStream)) return new WriteStream(name, opts);\n    if (!opts) opts = {};\n    this.name = name;\n    this.blocks = [];\n    this.batch = [];\n    this.bytesWritten = 0;\n    this.truncate = !opts.append;\n    this.append = opts.append;\n    this._shouldInitAppend = this.append && opts.start === undefined;\n    this._destroyed = false;\n    this._init(opts.start || 0);\n    Writable.call(this);\n  };\n  util.inherits(WriteStream, Writable);\n  WriteStream.prototype._init = function (start) {\n    this.blockIndex = start / blockSize | 0;\n    this.blockOffset = start - this.blockIndex * blockSize;\n    this.blockLength = this.blockOffset;\n  };\n  WriteStream.prototype._flush = function (cb) {\n    if (!this.batch.length) return cb();\n    var key = this.batch[this.batch.length - 1].key;\n    var batch = this.batch;\n    this.batch = [];\n    if (!this.truncate) return db.batch(batch, cb);\n    this.truncate = false;\n    this._truncate(batch, key, cb);\n  };\n  WriteStream.prototype._truncate = function (batch, key, cb) {\n    cb = once(cb);\n    var dels = [];\n    var keys = db.createKeyStream({\n      start: key,\n      end: this.name + '\\xff\\xff'\n    });\n    keys.on('error', cb);\n    keys.on('data', function (key) {\n      dels.push({\n        type: 'del',\n        key: key\n      });\n    });\n    keys.on('end', function () {\n      dels.push.apply(dels, batch);\n      db.batch(dels, cb);\n    });\n  };\n  WriteStream.prototype._writeBlock = function (cb) {\n    var block = this.blocks.length === 1 ? this.blocks[0] : Buffer.concat(this.blocks, this.blockLength - this.blockOffset);\n    var index = this.blockIndex;\n    var offset = this.blockOffset;\n    var self = this;\n    this.blockOffset = 0;\n    this.blockLength = 0;\n    this.blockIndex++;\n    this.blocks = [];\n    var key = this.name + '\\xff' + pad(index);\n    var append = function (block, force, cb) {\n      if (block.length) {\n        self.batch.push({\n          type: 'put',\n          key: key,\n          value: block,\n          valueEncoding: ENCODER\n        });\n      }\n      if (!force && self.batch.length < maxBatch) return cb();\n      return self._flush(cb);\n    };\n    if (!offset && block.length === blockSize) return append(block, false, cb);\n    if (!offset && !this.append) return append(block, false, cb);\n\n    // partial write\n    mutateBlock(key, offset, block, this.append, function (err, block, release) {\n      if (err) return cb(err);\n      append(block, true, function (err) {\n        release();\n        cb(err);\n      });\n    });\n  };\n  WriteStream.prototype._initAppend = function (data, enc, cb) {\n    var self = this;\n    this._shouldInitAppend = false;\n    blobs.size(this.name, function (err, size) {\n      if (err) return cb(err);\n      self._init(size);\n      self._write(data, enc, cb);\n    });\n  };\n  WriteStream.prototype._write = function (data, enc, cb) {\n    if (!data.length || this._destroyed) return cb();\n    if (this._shouldInitAppend) return this._initAppend(data, enc, cb);\n    var self = this;\n    var overflow;\n    var free = blockSize - this.blockLength;\n    var done = function (err) {\n      if (err) return cb(err);\n      if (overflow) return self._write(overflow, enc, cb);\n      cb();\n    };\n    if (data.length > free) {\n      overflow = data.slice(free);\n      data = data.slice(0, free);\n    }\n    this.bytesWritten += data.length;\n    this.blockLength += data.length;\n    this.blocks.push(data);\n    if (data.length < free) return done();\n    this._writeBlock(done);\n  };\n  WriteStream.prototype.destroy = function () {\n    if (this._destroyed) return;\n    this._destroyed = true;\n    process.nextTick(this.emit.bind(this, 'close'));\n  };\n  WriteStream.prototype.end = function (data) {\n    var self = this;\n    var args = arguments;\n    if (data && typeof data !== 'function') {\n      this.write(data);\n      data = EMPTY;\n    }\n    this.write(EMPTY, function () {\n      self._writeBlock(function (err) {\n        if (err) return self.emit('error', err);\n        self._flush(function (err) {\n          if (err) return self.emit('error', err);\n          Writable.prototype.end.apply(self, args);\n        });\n      });\n    });\n  };\n  var ReadStream = function (name, opts) {\n    if (!opts) opts = {};\n    var self = this;\n    var start = opts.start || 0;\n    var blockIndex = start / blockSize | 0;\n    var blockOffset = start - blockIndex * blockSize;\n    var key = name + '\\xff' + pad(blockIndex);\n    this.name = name;\n    this._missing = (typeof opts.end === 'number' ? opts.end : Infinity) - start + 1;\n    this._paused = false;\n    this._destroyed = false;\n    this._reader = db.createReadStream({\n      start: key,\n      end: name + '\\xff\\xff',\n      valueEncoding: ENCODER\n    });\n    var onblock = function (val) {\n      key = name + '\\xff' + pad(++blockIndex);\n      if (!self._missing) return false;\n      if (blockOffset) {\n        val = val.slice(blockOffset);\n        blockOffset = 0;\n        if (!val.length) return true;\n      }\n      if (val.length > self._missing) val = val.slice(0, self._missing);\n      self._missing -= val.length;\n      self._pause(!self.push(val));\n      return !!self._missing;\n    };\n    this._reader.on('data', function (data) {\n      while (data.key > key) {\n        if (!onblock(blank)) return;\n      }\n      onblock(data.value);\n    });\n    this._reader.on('error', function (err) {\n      self.emit('error', err);\n    });\n    this._reader.on('end', function () {\n      self.push(null);\n    });\n    Readable.call(this);\n  };\n  util.inherits(ReadStream, Readable);\n  ReadStream.prototype.destroy = function () {\n    if (this._destroyed) return;\n    this._destroyed = true;\n    this._reader.destroy();\n    process.nextTick(this.emit.bind(this, 'close'));\n  };\n  ReadStream.prototype._pause = function (paused) {\n    if (this._paused === paused) return;\n    this._paused = paused;\n    if (this._paused) this._reader.pause();else this._reader.resume();\n  };\n  ReadStream.prototype._read = function () {\n    this._pause(false);\n  };\n  blobs.remove = function (name, cb) {\n    cb = once(cb || noop);\n    var batch = [];\n    var keys = db.createKeyStream({\n      start: name + '\\xff',\n      end: name + '\\xff\\xff'\n    });\n    keys.on('error', cb);\n    keys.on('data', function (key) {\n      batch.push({\n        type: 'del',\n        key: key\n      });\n    });\n    keys.on('end', function () {\n      db.batch(batch, cb);\n    });\n  };\n  blobs.size = function (name, cb) {\n    peek.last(db, {\n      start: name + '\\xff',\n      end: name + '\\xff\\xff',\n      valueEncoding: ENCODER\n    }, function (err, latest, val) {\n      if (err && err.message === 'range not found') return cb(null, 0);\n      if (err) return cb(err);\n      if (latest.slice(0, name.length + 1) !== name + '\\xff') return cb(null, 0);\n      cb(null, parseInt(latest.toString().slice(name.length + 1), 16) * blockSize + val.length);\n    });\n  };\n  blobs.write = function (name, data, opts, cb) {\n    if (typeof opts === 'function') return blobs.write(name, data, null, opts);\n    if (!opts) opts = {};\n    if (!cb) cb = noop;\n    var ws = blobs.createWriteStream(name, opts);\n    ws.on('error', cb);\n    ws.on('finish', function () {\n      cb();\n    });\n    ws.write(data);\n    ws.end();\n  };\n  blobs.read = function (name, opts, cb) {\n    if (typeof opts === 'function') return blobs.read(name, null, opts);\n    if (!opts) opts = {};\n    var rs = blobs.createReadStream(name, opts);\n    var list = [];\n    rs.on('error', cb);\n    rs.on('data', function (data) {\n      list.push(data);\n    });\n    rs.on('end', function () {\n      cb(null, list.length === 1 ? list[0] : Buffer.concat(list));\n    });\n  };\n  blobs.createReadStream = function (name, opts) {\n    return new ReadStream(name, opts);\n  };\n  blobs.createWriteStream = function (name, opts) {\n    return new WriteStream(name, opts);\n  };\n  return blobs;\n};","map":{"version":3,"names":["Writable","require","Readable","peek","util","once","EMPTY","Buffer","ENCODER","encode","data","decode","isBuffer","buffer","type","noop","pad","n","toString","slice","length","expand","buf","len","tmp","copy","module","exports","db","opts","blobs","blockSize","maxBatch","batch","blank","put","reservations","mutateBlock","key","offset","block","append","cb","release","locks","onreservation","r","get","valueEncoding","err","notFound","WriteStream","name","blocks","bytesWritten","truncate","_shouldInitAppend","start","undefined","_destroyed","_init","call","inherits","prototype","blockIndex","blockOffset","blockLength","_flush","_truncate","dels","keys","createKeyStream","end","on","push","apply","_writeBlock","concat","index","self","force","value","_initAppend","enc","size","_write","overflow","free","done","destroy","process","nextTick","emit","bind","args","arguments","write","ReadStream","_missing","Infinity","_paused","_reader","createReadStream","onblock","val","_pause","paused","pause","resume","_read","remove","last","latest","message","parseInt","ws","createWriteStream","read","rs","list"],"sources":["C:/Users/Moran/Documents/react-projects/react-demo/node_modules/level-blobs/index.js"],"sourcesContent":["var Writable = require('readable-stream/writable');\nvar Readable = require('readable-stream/readable');\nvar peek = require('level-peek');\nvar util = require('util');\nvar once = require('once');\n\nvar EMPTY = new Buffer(0);\nvar ENCODER = {\n\tencode: function(data) {\n\t\treturn typeof data === 'string' ? data = new Buffer(data) : data;\n\t},\n\tdecode: function(data) {\n\t\treturn Buffer.isBuffer(data) ? data : new Buffer(data);\n\t},\n\tbuffer: true,\n\ttype: 'raw'\n};\n\nvar noop = function() {};\n\nvar pad = function(n) {\n\tn = n.toString(16);\n\treturn '00000000'.slice(0, -n.length)+n;\n};\n\nvar expand = function(buf, len) {\n\tvar tmp = new Buffer(len);\n\tbuf.copy(tmp);\n\treturn tmp;\n};\n\nmodule.exports = function(db, opts) {\n\tif (!opts) opts = {};\n\n\tvar blobs = {};\n\n\tvar blockSize = opts.blockSize || 65536;\n\tvar maxBatch = opts.batch || 100;\n\tvar blank = new Buffer(blockSize);\n\n\tdb.put('\\x00', 'ignore', noop); // memdown#12 workaround\n\n\tvar reservations = {};\n\tvar mutateBlock = function(key, offset, block, append, cb) {\n\t\tvar release = function() {\n\t\t\tif (!--reservations[key].locks) delete reservations[key];\n\t\t};\n\n\t\tvar onreservation = function(r) {\n\t\t\tr.locks++;\n\n\t\t\tif (!r.block && !offset) {\n\t\t\t\tr.block = block;\n\t\t\t\tcb(null, r.block, release);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!r.block) r.block = new Buffer(blockSize);\n\t\t\tif (r.block.length < offset + block.length) r.block = expand(r.block, offset + block.length);\n\n\t\t\tblock.copy(r.block, offset);\n\n\t\t\tif (!append && offset + block.length < r.block.length) r.block = r.block.slice(0, offset+block.length);\n\t\t\tcb(null, r.block, release);\n\t\t};\n\n\t\tif (reservations[key]) return onreservation(reservations[key]);\n\n\t\tdb.get(key, {valueEncoding:ENCODER}, function(err, block) {\n\t\t\tif (err && !err.notFound) return cb(err);\n\t\t\tif (!reservations[key]) reservations[key] = {locks:0, block:block};\n\t\t\tonreservation(reservations[key]);\n\t\t});\n\t};\n\n\tvar WriteStream = function(name, opts) {\n\t\tif (!(this instanceof WriteStream)) return new WriteStream(name, opts);\n\t\tif (!opts) opts = {};\n\n\t\tthis.name = name;\n\t\tthis.blocks = [];\n\t\tthis.batch = [];\n\t\tthis.bytesWritten = 0;\n\t\tthis.truncate = !opts.append;\n\t\tthis.append = opts.append;\n\n\t\tthis._shouldInitAppend = this.append && opts.start === undefined;\n\t\tthis._destroyed = false;\n\t\tthis._init(opts.start || 0);\n\n\t\tWritable.call(this);\n\t};\n\n\tutil.inherits(WriteStream, Writable);\n\n\tWriteStream.prototype._init = function(start) {\n\t\tthis.blockIndex = (start / blockSize) | 0;\n\t\tthis.blockOffset = start - this.blockIndex * blockSize;\n\t\tthis.blockLength = this.blockOffset;\n\t};\n\n\tWriteStream.prototype._flush = function(cb) {\n\t\tif (!this.batch.length) return cb();\n\n\t\tvar key = this.batch[this.batch.length-1].key;\n\t\tvar batch = this.batch;\n\t\tthis.batch = [];\n\n\t\tif (!this.truncate) return db.batch(batch, cb);\n\t\tthis.truncate = false;\n\t\tthis._truncate(batch, key, cb);\n\t};\n\n\tWriteStream.prototype._truncate = function(batch, key, cb) {\n\t\tcb = once(cb);\n\n\t\tvar dels = [];\n\t\tvar keys = db.createKeyStream({\n\t\t\tstart: key,\n\t\t\tend: this.name+'\\xff\\xff'\n\t\t});\n\n\t\tkeys.on('error', cb);\n\n\t\tkeys.on('data', function(key) {\n\t\t\tdels.push({type:'del', key:key});\n\t\t});\n\n\t\tkeys.on('end', function() {\n\t\t\tdels.push.apply(dels, batch);\n\t\t\tdb.batch(dels, cb);\n\t\t});\n\t};\n\n\tWriteStream.prototype._writeBlock = function(cb) {\n\t\tvar block = this.blocks.length === 1 ? this.blocks[0] : Buffer.concat(this.blocks, this.blockLength - this.blockOffset);\n\t\tvar index = this.blockIndex;\n\t\tvar offset = this.blockOffset;\n\t\tvar self = this;\n\n\t\tthis.blockOffset = 0;\n\t\tthis.blockLength = 0;\n\t\tthis.blockIndex++;\n\t\tthis.blocks = [];\n\n\t\tvar key = this.name+'\\xff'+pad(index);\n\n\t\tvar append = function(block, force, cb) {\n\t\t\tif (block.length) {\n\t\t\t\tself.batch.push({\n\t\t\t\t\ttype: 'put',\n\t\t\t\t\tkey: key,\n\t\t\t\t\tvalue: block,\n\t\t\t\t\tvalueEncoding: ENCODER\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!force && self.batch.length < maxBatch) return cb();\n\t\t\treturn self._flush(cb);\n\t\t};\n\n\t\tif (!offset && block.length === blockSize) return append(block, false, cb);\n\t\tif (!offset && !this.append) return append(block, false, cb);\n\n\t\t// partial write\n\t\tmutateBlock(key, offset, block, this.append, function(err, block, release) {\n\t\t\tif (err) return cb(err);\n\t\t\tappend(block, true, function(err) {\n\t\t\t\trelease();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tWriteStream.prototype._initAppend = function(data, enc, cb) {\n\t\tvar self = this;\n\t\tthis._shouldInitAppend = false;\n\t\tblobs.size(this.name, function(err, size) {\n\t\t\tif (err) return cb(err);\n\t\t\tself._init(size);\n\t\t\tself._write(data, enc, cb);\n\t\t});\n\t};\n\n\tWriteStream.prototype._write = function(data, enc, cb) {\n\t\tif (!data.length || this._destroyed) return cb();\n\t\tif (this._shouldInitAppend) return this._initAppend(data, enc, cb);\n\n\t\tvar self = this;\n\t\tvar overflow;\n\t\tvar free = blockSize - this.blockLength;\n\n\t\tvar done = function(err) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (overflow) return self._write(overflow, enc, cb);\n\t\t\tcb();\n\t\t};\n\n\t\tif (data.length > free) {\n\t\t\toverflow = data.slice(free);\n\t\t\tdata = data.slice(0, free);\n\t\t}\n\n\t\tthis.bytesWritten += data.length;\n\t\tthis.blockLength += data.length;\n\t\tthis.blocks.push(data);\n\n\t\tif (data.length < free) return done();\n\t\tthis._writeBlock(done);\n\t};\n\n\tWriteStream.prototype.destroy = function() {\n\t\tif (this._destroyed) return;\n\t\tthis._destroyed = true;\n\t\tprocess.nextTick(this.emit.bind(this, 'close'));\n\t};\n\n\tWriteStream.prototype.end = function(data) {\n\t\tvar self = this;\n\t\tvar args = arguments;\n\n\t\tif (data && typeof data !== 'function') {\n\t\t\tthis.write(data);\n\t\t\tdata = EMPTY;\n\t\t}\n\n\t\tthis.write(EMPTY, function() {\n\t\t\tself._writeBlock(function(err) {\n\t\t\t\tif (err) return self.emit('error', err);\n\t\t\t\tself._flush(function(err) {\n\t\t\t\t\tif (err) return self.emit('error', err);\n\t\t\t\t\tWritable.prototype.end.apply(self, args);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tvar ReadStream = function(name, opts) {\n\t\tif (!opts) opts = {};\n\n\t\tvar self = this;\n\n\t\tvar start = opts.start || 0;\n\t\tvar blockIndex = (start / blockSize) | 0;\n\t\tvar blockOffset = start - blockIndex * blockSize;\n\t\tvar key = name+'\\xff'+pad(blockIndex);\n\n\t\tthis.name = name;\n\t\tthis._missing = (typeof opts.end === 'number' ? opts.end : Infinity) - start + 1;\n\t\tthis._paused = false;\n\t\tthis._destroyed = false;\n\n\t\tthis._reader = db.createReadStream({\n\t\t\tstart: key,\n\t\t\tend: name+'\\xff\\xff',\n\t\t\tvalueEncoding: ENCODER\n\t\t});\n\n\t\tvar onblock = function(val) {\n\t\t\tkey = name+'\\xff'+pad(++blockIndex);\n\n\t\t\tif (!self._missing) return false;\n\n\t\t\tif (blockOffset) {\n\t\t\t\tval = val.slice(blockOffset);\n\t\t\t\tblockOffset = 0;\n\t\t\t\tif (!val.length) return true;\n\t\t\t}\n\n\t\t\tif (val.length > self._missing) val = val.slice(0, self._missing);\n\n\t\t\tself._missing -= val.length;\n\t\t\tself._pause(!self.push(val));\n\n\t\t\treturn !!self._missing;\n\t\t};\n\n\t\tthis._reader.on('data', function(data) {\n\t\t\twhile (data.key > key) {\n\t\t\t\tif (!onblock(blank)) return;\n\t\t\t}\n\n\t\t\tonblock(data.value);\n\t\t});\n\n\t\tthis._reader.on('error', function(err) {\n\t\t\tself.emit('error', err);\n\t\t});\n\n\t\tthis._reader.on('end', function() {\n\t\t\tself.push(null);\n\t\t});\n\n\t\tReadable.call(this);\n\t};\n\n\tutil.inherits(ReadStream, Readable);\n\n\tReadStream.prototype.destroy = function() {\n\t\tif (this._destroyed) return;\n\t\tthis._destroyed = true;\n\t\tthis._reader.destroy();\n\t\tprocess.nextTick(this.emit.bind(this, 'close'));\n\t};\n\n\tReadStream.prototype._pause = function(paused) {\n\t\tif (this._paused === paused) return;\n\t\tthis._paused = paused;\n\t\tif (this._paused) this._reader.pause();\n\t\telse this._reader.resume();\n\t};\n\n\tReadStream.prototype._read = function() {\n\t\tthis._pause(false);\n\t};\n\n\tblobs.remove = function(name, cb) {\n\t\tcb = once(cb || noop);\n\n\t\tvar batch = [];\n\t\tvar keys = db.createKeyStream({\n\t\t\tstart: name+'\\xff',\n\t\t\tend: name+'\\xff\\xff'\n\t\t});\n\n\t\tkeys.on('error', cb);\n\n\t\tkeys.on('data', function(key) {\n\t\t\tbatch.push({type:'del', key:key});\n\t\t});\n\n\t\tkeys.on('end', function() {\n\t\t\tdb.batch(batch, cb);\n\t\t});\n\t};\n\n\tblobs.size = function(name, cb) {\n\t\tpeek.last(db, {\n\t\t\tstart: name+'\\xff',\n\t\t\tend: name+'\\xff\\xff',\n\t\t\tvalueEncoding:ENCODER\n\t\t}, function(err, latest, val) {\n\t\t\tif (err && err.message === 'range not found') return cb(null, 0);\n\t\t\tif (err) return cb(err);\n\t\t\tif (latest.slice(0, name.length+1) !== name+'\\xff') return cb(null, 0);\n\n\t\t\tcb(null, parseInt(latest.toString().slice(name.length+1), 16) * blockSize + val.length);\n\t\t});\n\t};\n\n\tblobs.write = function(name, data, opts, cb) {\n\t\tif (typeof opts === 'function') return blobs.write(name, data, null, opts);\n\t\tif (!opts) opts = {};\n\t\tif (!cb) cb = noop;\n\n\t\tvar ws = blobs.createWriteStream(name, opts);\n\n\t\tws.on('error', cb);\n\t\tws.on('finish', function() {\n\t\t\tcb();\n\t\t});\n\n\t\tws.write(data);\n\t\tws.end();\n\t}\n\n\tblobs.read = function(name, opts, cb) {\n\t\tif (typeof opts === 'function') return blobs.read(name, null, opts);\n\t\tif (!opts) opts = {};\n\n\t\tvar rs = blobs.createReadStream(name, opts);\n\t\tvar list = [];\n\n\t\trs.on('error', cb);\n\t\trs.on('data', function(data) {\n\t\t\tlist.push(data);\n\t\t});\n\t\trs.on('end', function() {\n\t\t\tcb(null, list.length === 1 ? list[0] : Buffer.concat(list));\n\t\t});\n\t};\n\n\tblobs.createReadStream = function(name, opts) {\n\t\treturn new ReadStream(name, opts);\n\t};\n\n\tblobs.createWriteStream = function(name, opts) {\n\t\treturn new WriteStream(name, opts);\n\t};\n\n\treturn blobs;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}