{"ast":null,"code":"/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\nmodule.exports = onFinished;\nmodule.exports.isFinished = isFinished;\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = require('ee-first');\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg);\n    return msg;\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener);\n  return msg;\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished(msg) {\n  var socket = msg.socket;\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || socket && !socket.writable);\n  }\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || msg.complete && !msg.readable);\n  }\n\n  // don't know\n  return undefined;\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg;\n  var eeSocket;\n  var finished = false;\n  function onFinish(error) {\n    eeMsg.cancel();\n    eeSocket.cancel();\n    finished = true;\n    callback(error);\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish);\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket);\n    if (finished) return;\n    if (eeMsg !== eeSocket) return;\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish);\n  }\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket);\n    return;\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket);\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket);\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished;\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg);\n    attachFinishedListener(msg, attached);\n  }\n  attached.queue.push(listener);\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null;\n    if (!listener.queue) return;\n    var queue = listener.queue;\n    listener.queue = null;\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg);\n    }\n  }\n  listener.queue = [];\n  return listener;\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket;\n  if (typeof assignSocket !== 'function') return;\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket);\n    callback(socket);\n  };\n}","map":{"version":3,"names":["module","exports","onFinished","isFinished","first","require","defer","setImmediate","fn","process","nextTick","bind","apply","arguments","msg","listener","attachListener","socket","finished","Boolean","writable","complete","upgrade","readable","undefined","attachFinishedListener","callback","eeMsg","eeSocket","onFinish","error","cancel","onSocket","removeListener","on","patchAssignSocket","attached","__onFinished","queue","createListener","push","err","i","length","res","assignSocket","_assignSocket","call"],"sources":["C:/Users/Moran/Documents/react-projects/react-demo/node_modules/on-finished/index.js"],"sourcesContent":["/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished(msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}